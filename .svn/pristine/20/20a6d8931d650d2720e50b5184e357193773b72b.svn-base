//用户模块
//职责：负责用户相关的数据

//NOTE: aciotn 常量
const ADD_ADDRESS_ACTION = "ADD_ADDRESS_ACTION";
const REMOVE_ADDRESS_ACTION = "REMOVE_ADDRESS_ACTION";
const UPDATE_ADDRESS_ACTION = "UPDATE_ADDRESS_ACTION";

//mutations 常量
const ADD_ADDRESS_MUTATION = "ADD_ADDRESS_MUTATION";
const REMOVE_ADDRESS_MUTION = "REMOVE_ADDRESS_MUTION";
const UPDATE_ADDRESS_MUTATION = "UPDATE_ADDRESS_MUTATION";

//NOTE: action creator 辅助函数
//添加一个收货地址
export const addAddressAction = (newAddress) => {
    return {
        type: ADD_ADDRESS_ACTION,
        data: newAddress
    }
}

//根据id 移除一个收货地址
export const removeAddressAction = (addressId) => {
    return {
        type: REMOVE_ADDRESS_ACTION,
        data: addressId
    }
}

// 更新一个收货地址，必须由id
export const updateAddressAction = (newAddress) => {
    return {
        type: UPDATE_ADDRESS_ACTION,
        data: newAddress
    }
}


// 下面的注释为将给vscode 提供智能提示的能提，ts增强
/**
 * @type {import("vuex/types/index").Store}
 */
const accountStore = {
    state: {
        userInfos: {
        },
        addresses: [{
            id: "123",
            isDefault: false,
            receiver: "陈华",
            phone: "13165425486",
            province: "广东",
            city: "广州",
            address: "陈华的家"
        }, {
            id: "1231adqwe",
            isDefault: true,
            receiver: "陈华",
            phone: "17542659356",
            province: "广东",
            city: "中山",
            address: "陈华工作的地方"
        }]
    },
    actions: {
        async [ADD_ADDRESS_ACTION]({ commit }, address) {
            //网络请求
            // const resp = await 
        },
        async [REMOVE_ADDRESS_ACTION]({ commit }, addressId) {
            //网络请求
        },
        async [UPDATE_ADDRESS_ACTION]({ commit }, addressWithId) {
            //网络请求
        }
    },
    mutations: {
        [ADD_ADDRESS_MUTATION](state, address) {
            state.addresses.push(address);
        },
        [REMOVE_ADDRESS_MUTION](state, addressId) {
            const index = state.addresses.findIndex(address => address.id === addressId);
            state.addresses.splice(index, 1);
        },
        [UPDATE_ADDRESS_MUTATION](state, addressWithId) {
            const index = state.addresses.findIndex(address => address.id === addressWithId.id);
            state.addresses.splice(index, 1, addressWithId);
        },
    }
}

export default accountStore;
